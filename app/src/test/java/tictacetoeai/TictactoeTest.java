/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package tictacetoeai;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class TictactoeTest {
    @Test void returnsLoserWhenNoMovesHaveBeenplayed() {
        Tictactoe classUnderTest = new Tictactoe();
        String[][] board = {{"","",""},{"", "", ""},{"", "", ""}};
        assertEquals(classUnderTest.winConditions(board), false);
    }
    @Test void returnsWinnerWhenWinConditionIsMet() {
        Tictactoe classUnderTest = new Tictactoe();
        String[][] board = {{"x","x","x"},{"", "", ""},{"", "", ""}};
        assertEquals(classUnderTest.winConditions(board), true);
    }
    @Test void returnsLoserWhenNotSameString() {
        Tictactoe classUnderTest = new Tictactoe();
        String[][] board = {{"x","o","x"},{"", "", ""},{"", "", ""}};
        assertEquals(classUnderTest.winConditions(board), false);
    }
    @Test void returnsBasicDiagonalWin() {
        Tictactoe classUnderTest = new Tictactoe();
        String[][] board = {{"","","x"},{"", "x", ""},{"x", "", ""}};
        assertEquals(classUnderTest.winConditions(board), true);
    }
    @Test void returnsDiagonalWin() {
        Tictactoe classUnderTest = new Tictactoe();
        String[][] board = {{"x","o","x"},{"o", "x", ""},{"x", "o", ""}};
        assertEquals(classUnderTest.winConditions(board), true);
    }
    @Test void returnsWinningMove() {
        Tictactoe classUnderTest = new Tictactoe();
        String[][] board = {{"x","","x"},{"", "o", "o"},{"", "", ""}};
        classUnderTest.setBoard(board);
        assertArrayEquals(classUnderTest.computerBestMove(3, "x"), new String[][]{{"x","x","x"},{"", "o", "o"},{"", "", ""}});
    }
    @Test void blocksWinningMove() {
        Tictactoe classUnderTest = new Tictactoe();
        String[][] board = {{"","","x"},{"", "o", "o"},{"", "", "x"}};
        classUnderTest.setBoard(board);
        assertArrayEquals(classUnderTest.computerBestMove(3, "x"), new String[][]{{"","","x"},{"x", "o", "o"},{"", "", "x"}});
    }
    @Test void makesBestFirstMove() {
        Tictactoe classUnderTest = new Tictactoe();
        String[][] board = {{"","",""},{"", "", ""},{"", "", ""}};
        classUnderTest.setBoard(board);
        assertArrayEquals(classUnderTest.computerBestMove(3, "x"), new String[][]{{"","",""},{"", "x", ""},{"", "", ""}});
    }
}
